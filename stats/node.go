package stats

type NodeName = string

// NOTE: The structs in this package were generated by getting responses from ES, using
// this handy tool at https://mholt.github.io/json-to-go/ and making adjustments

type NodesStats struct {
	Response struct {
		Total      int `json:"total"`
		Successful int `json:"successful"`
		Failed     int `json:"failed"`
	} `json:"_nodes"`
	ClusterName string                 `json:"cluster_name"`
	Nodes       map[NodeName]NodeStats `json:"nodes"`
}

type NodeStats struct {
	Timestamp int64      `json:"timestamp"`
	Name      string     `json:"name"`
	Roles     []string   `json:"roles"`
	Indices   IndexStats `json:"indices"`
	// Indices   struct {
	// 	Docs struct {
	// 		Count   int `json:"count"`
	// 		Deleted int `json:"deleted"`
	// 	} `json:"docs"`
	// 	Store struct {
	// 		SizeInBytes     int `json:"size_in_bytes"`
	// 		ReservedInBytes int `json:"reserved_in_bytes"`
	// 	} `json:"store"`
	// 	Indexing struct {
	// 		IndexTotal           int  `json:"index_total"`
	// 		IndexTimeInMillis    int  `json:"index_time_in_millis"`
	// 		IndexCurrent         int  `json:"index_current"`
	// 		IndexFailed          int  `json:"index_failed"`
	// 		DeleteTotal          int  `json:"delete_total"`
	// 		DeleteTimeInMillis   int  `json:"delete_time_in_millis"`
	// 		DeleteCurrent        int  `json:"delete_current"`
	// 		NoopUpdateTotal      int  `json:"noop_update_total"`
	// 		IsThrottled          bool `json:"is_throttled"`
	// 		ThrottleTimeInMillis int  `json:"throttle_time_in_millis"`
	// 	} `json:"indexing"`
	// 	Get struct {
	// 		Total               int `json:"total"`
	// 		TimeInMillis        int `json:"time_in_millis"`
	// 		ExistsTotal         int `json:"exists_total"`
	// 		ExistsTimeInMillis  int `json:"exists_time_in_millis"`
	// 		MissingTotal        int `json:"missing_total"`
	// 		MissingTimeInMillis int `json:"missing_time_in_millis"`
	// 		Current             int `json:"current"`
	// 	} `json:"get"`
	// 	Search struct {
	// 		OpenContexts        int `json:"open_contexts"`
	// 		QueryTotal          int `json:"query_total"`
	// 		QueryTimeInMillis   int `json:"query_time_in_millis"`
	// 		QueryCurrent        int `json:"query_current"`
	// 		FetchTotal          int `json:"fetch_total"`
	// 		FetchTimeInMillis   int `json:"fetch_time_in_millis"`
	// 		FetchCurrent        int `json:"fetch_current"`
	// 		ScrollTotal         int `json:"scroll_total"`
	// 		ScrollTimeInMillis  int `json:"scroll_time_in_millis"`
	// 		ScrollCurrent       int `json:"scroll_current"`
	// 		SuggestTotal        int `json:"suggest_total"`
	// 		SuggestTimeInMillis int `json:"suggest_time_in_millis"`
	// 		SuggestCurrent      int `json:"suggest_current"`
	// 	} `json:"search"`
	// 	Merges struct {
	// 		Current                    int `json:"current"`
	// 		CurrentDocs                int `json:"current_docs"`
	// 		CurrentSizeInBytes         int `json:"current_size_in_bytes"`
	// 		Total                      int `json:"total"`
	// 		TotalTimeInMillis          int `json:"total_time_in_millis"`
	// 		TotalDocs                  int `json:"total_docs"`
	// 		TotalSizeInBytes           int `json:"total_size_in_bytes"`
	// 		TotalStoppedTimeInMillis   int `json:"total_stopped_time_in_millis"`
	// 		TotalThrottledTimeInMillis int `json:"total_throttled_time_in_millis"`
	// 		TotalAutoThrottleInBytes   int `json:"total_auto_throttle_in_bytes"`
	// 	} `json:"merges"`
	// 	Refresh struct {
	// 		Total                     int `json:"total"`
	// 		TotalTimeInMillis         int `json:"total_time_in_millis"`
	// 		ExternalTotal             int `json:"external_total"`
	// 		ExternalTotalTimeInMillis int `json:"external_total_time_in_millis"`
	// 		Listeners                 int `json:"listeners"`
	// 	} `json:"refresh"`
	// 	Flush struct {
	// 		Total             int `json:"total"`
	// 		Periodic          int `json:"periodic"`
	// 		TotalTimeInMillis int `json:"total_time_in_millis"`
	// 	} `json:"flush"`
	// 	Warmer struct {
	// 		Current           int `json:"current"`
	// 		Total             int `json:"total"`
	// 		TotalTimeInMillis int `json:"total_time_in_millis"`
	// 	} `json:"warmer"`
	// 	QueryCache struct {
	// 		MemorySizeInBytes int `json:"memory_size_in_bytes"`
	// 		TotalCount        int `json:"total_count"`
	// 		HitCount          int `json:"hit_count"`
	// 		MissCount         int `json:"miss_count"`
	// 		CacheSize         int `json:"cache_size"`
	// 		CacheCount        int `json:"cache_count"`
	// 		Evictions         int `json:"evictions"`
	// 	} `json:"query_cache"`
	// 	Fielddata struct {
	// 		MemorySizeInBytes int `json:"memory_size_in_bytes"`
	// 		Evictions         int `json:"evictions"`
	// 	} `json:"fielddata"`
	// 	Completion struct {
	// 		SizeInBytes int `json:"size_in_bytes"`
	// 	} `json:"completion"`
	// 	Segments struct {
	// 		Count                     int   `json:"count"`
	// 		MemoryInBytes             int   `json:"memory_in_bytes"`
	// 		TermsMemoryInBytes        int   `json:"terms_memory_in_bytes"`
	// 		StoredFieldsMemoryInBytes int   `json:"stored_fields_memory_in_bytes"`
	// 		TermVectorsMemoryInBytes  int   `json:"term_vectors_memory_in_bytes"`
	// 		NormsMemoryInBytes        int   `json:"norms_memory_in_bytes"`
	// 		PointsMemoryInBytes       int   `json:"points_memory_in_bytes"`
	// 		DocValuesMemoryInBytes    int   `json:"doc_values_memory_in_bytes"`
	// 		IndexWriterMemoryInBytes  int   `json:"index_writer_memory_in_bytes"`
	// 		VersionMapMemoryInBytes   int   `json:"version_map_memory_in_bytes"`
	// 		FixedBitSetMemoryInBytes  int   `json:"fixed_bit_set_memory_in_bytes"`
	// 		MaxUnsafeAutoIDTimestamp  int64 `json:"max_unsafe_auto_id_timestamp"`
	// 		FileSizes                 struct {
	// 		} `json:"file_sizes"`
	// 	} `json:"segments"`
	// 	Translog struct {
	// 		Operations              int `json:"operations"`
	// 		SizeInBytes             int `json:"size_in_bytes"`
	// 		UncommittedOperations   int `json:"uncommitted_operations"`
	// 		UncommittedSizeInBytes  int `json:"uncommitted_size_in_bytes"`
	// 		EarliestLastModifiedAge int `json:"earliest_last_modified_age"`
	// 	} `json:"translog"`
	// 	RequestCache struct {
	// 		MemorySizeInBytes int `json:"memory_size_in_bytes"`
	// 		Evictions         int `json:"evictions"`
	// 		HitCount          int `json:"hit_count"`
	// 		MissCount         int `json:"miss_count"`
	// 	} `json:"request_cache"`
	// 	Recovery struct {
	// 		CurrentAsSource      int `json:"current_as_source"`
	// 		CurrentAsTarget      int `json:"current_as_target"`
	// 		ThrottleTimeInMillis int `json:"throttle_time_in_millis"`
	// 	} `json:"recovery"`
	// } `json:"indices"`
	Os struct {
		Timestamp int64 `json:"timestamp"`
		CPU       struct {
			Percent     int `json:"percent"`
			LoadAverage struct {
				OneM  float64 `json:"1m"`
				FiveM float64 `json:"5m"`
				One5M float64 `json:"15m"`
			} `json:"load_average"`
		} `json:"cpu"`
		Mem struct {
			TotalInBytes int64 `json:"total_in_bytes"`
			FreeInBytes  int   `json:"free_in_bytes"`
			UsedInBytes  int64 `json:"used_in_bytes"`
			FreePercent  int   `json:"free_percent"`
			UsedPercent  int   `json:"used_percent"`
		} `json:"mem"`
		Swap struct {
			TotalInBytes int `json:"total_in_bytes"`
			FreeInBytes  int `json:"free_in_bytes"`
			UsedInBytes  int `json:"used_in_bytes"`
		} `json:"swap"`
		Cgroup struct {
			Cpuacct struct {
				ControlGroup string `json:"control_group"`
				UsageNanos   int64  `json:"usage_nanos"`
			} `json:"cpuacct"`
			CPU struct {
				ControlGroup    string `json:"control_group"`
				CfsPeriodMicros int    `json:"cfs_period_micros"`
				CfsQuotaMicros  int    `json:"cfs_quota_micros"`
				Stat            struct {
					NumberOfElapsedPeriods int `json:"number_of_elapsed_periods"`
					NumberOfTimesThrottled int `json:"number_of_times_throttled"`
					TimeThrottledNanos     int `json:"time_throttled_nanos"`
				} `json:"stat"`
			} `json:"cpu"`
			Memory struct {
				ControlGroup string `json:"control_group"`
				LimitInBytes string `json:"limit_in_bytes"`
				UsageInBytes string `json:"usage_in_bytes"`
			} `json:"memory"`
		} `json:"cgroup"`
	} `json:"os"`
	Process struct {
		Timestamp           int64 `json:"timestamp"`
		OpenFileDescriptors int   `json:"open_file_descriptors"`
		MaxFileDescriptors  int   `json:"max_file_descriptors"`
		CPU                 struct {
			Percent       int `json:"percent"`
			TotalInMillis int `json:"total_in_millis"`
		} `json:"cpu"`
		Mem struct {
			TotalVirtualInBytes int64 `json:"total_virtual_in_bytes"`
		} `json:"mem"`
	} `json:"process"`
	Jvm struct {
		Timestamp      int64 `json:"timestamp"`
		UptimeInMillis int64 `json:"uptime_in_millis"`
		Mem            struct {
			HeapUsedInBytes         int   `json:"heap_used_in_bytes"`
			HeapUsedPercent         int   `json:"heap_used_percent"`
			HeapCommittedInBytes    int64 `json:"heap_committed_in_bytes"`
			HeapMaxInBytes          int64 `json:"heap_max_in_bytes"`
			NonHeapUsedInBytes      int   `json:"non_heap_used_in_bytes"`
			NonHeapCommittedInBytes int   `json:"non_heap_committed_in_bytes"`
			Pools                   struct {
				Young struct {
					UsedInBytes     int `json:"used_in_bytes"`
					MaxInBytes      int `json:"max_in_bytes"`
					PeakUsedInBytes int `json:"peak_used_in_bytes"`
					PeakMaxInBytes  int `json:"peak_max_in_bytes"`
				} `json:"young"`
				Survivor struct {
					UsedInBytes     int `json:"used_in_bytes"`
					MaxInBytes      int `json:"max_in_bytes"`
					PeakUsedInBytes int `json:"peak_used_in_bytes"`
					PeakMaxInBytes  int `json:"peak_max_in_bytes"`
				} `json:"survivor"`
				Old struct {
					UsedInBytes     int   `json:"used_in_bytes"`
					MaxInBytes      int64 `json:"max_in_bytes"`
					PeakUsedInBytes int   `json:"peak_used_in_bytes"`
					PeakMaxInBytes  int64 `json:"peak_max_in_bytes"`
				} `json:"old"`
			} `json:"pools"`
		} `json:"mem"`
		Threads struct {
			Count     int `json:"count"`
			PeakCount int `json:"peak_count"`
		} `json:"threads"`
		Gc struct {
			Collectors struct {
				Young struct {
					CollectionCount        int `json:"collection_count"`
					CollectionTimeInMillis int `json:"collection_time_in_millis"`
				} `json:"young"`
				Old struct {
					CollectionCount        int `json:"collection_count"`
					CollectionTimeInMillis int `json:"collection_time_in_millis"`
				} `json:"old"`
			} `json:"collectors"`
		} `json:"gc"`
		BufferPools struct {
			Mapped struct {
				Count                int `json:"count"`
				UsedInBytes          int `json:"used_in_bytes"`
				TotalCapacityInBytes int `json:"total_capacity_in_bytes"`
			} `json:"mapped"`
			Direct struct {
				Count                int `json:"count"`
				UsedInBytes          int `json:"used_in_bytes"`
				TotalCapacityInBytes int `json:"total_capacity_in_bytes"`
			} `json:"direct"`
		} `json:"buffer_pools"`
		Classes struct {
			CurrentLoadedCount int `json:"current_loaded_count"`
			TotalLoadedCount   int `json:"total_loaded_count"`
			TotalUnloadedCount int `json:"total_unloaded_count"`
		} `json:"classes"`
	} `json:"jvm"`
	ThreadPool struct {
		AdThreadpool struct {
			Threads   int `json:"threads"`
			Queue     int `json:"queue"`
			Active    int `json:"active"`
			Rejected  int `json:"rejected"`
			Largest   int `json:"largest"`
			Completed int `json:"completed"`
		} `json:"ad-threadpool"`
		Analyze struct {
			Threads   int `json:"threads"`
			Queue     int `json:"queue"`
			Active    int `json:"active"`
			Rejected  int `json:"rejected"`
			Largest   int `json:"largest"`
			Completed int `json:"completed"`
		} `json:"analyze"`
		ColdCatalogClient struct {
			Threads   int `json:"threads"`
			Queue     int `json:"queue"`
			Active    int `json:"active"`
			Rejected  int `json:"rejected"`
			Largest   int `json:"largest"`
			Completed int `json:"completed"`
		} `json:"cold_catalog_client"`
		ColdMigrationServices struct {
			Threads   int `json:"threads"`
			Queue     int `json:"queue"`
			Active    int `json:"active"`
			Rejected  int `json:"rejected"`
			Largest   int `json:"largest"`
			Completed int `json:"completed"`
		} `json:"cold_migration_services"`
		FetchShardStarted struct {
			Threads   int `json:"threads"`
			Queue     int `json:"queue"`
			Active    int `json:"active"`
			Rejected  int `json:"rejected"`
			Largest   int `json:"largest"`
			Completed int `json:"completed"`
		} `json:"fetch_shard_started"`
		FetchShardStore struct {
			Threads   int `json:"threads"`
			Queue     int `json:"queue"`
			Active    int `json:"active"`
			Rejected  int `json:"rejected"`
			Largest   int `json:"largest"`
			Completed int `json:"completed"`
		} `json:"fetch_shard_store"`
		Flush struct {
			Threads   int `json:"threads"`
			Queue     int `json:"queue"`
			Active    int `json:"active"`
			Rejected  int `json:"rejected"`
			Largest   int `json:"largest"`
			Completed int `json:"completed"`
		} `json:"flush"`
		ForceMerge struct {
			Threads   int `json:"threads"`
			Queue     int `json:"queue"`
			Active    int `json:"active"`
			Rejected  int `json:"rejected"`
			Largest   int `json:"largest"`
			Completed int `json:"completed"`
		} `json:"force_merge"`
		Generic struct {
			Threads   int `json:"threads"`
			Queue     int `json:"queue"`
			Active    int `json:"active"`
			Rejected  int `json:"rejected"`
			Largest   int `json:"largest"`
			Completed int `json:"completed"`
		} `json:"generic"`
		Get struct {
			Threads   int `json:"threads"`
			Queue     int `json:"queue"`
			Active    int `json:"active"`
			Rejected  int `json:"rejected"`
			Largest   int `json:"largest"`
			Completed int `json:"completed"`
		} `json:"get"`
		Listener struct {
			Threads   int `json:"threads"`
			Queue     int `json:"queue"`
			Active    int `json:"active"`
			Rejected  int `json:"rejected"`
			Largest   int `json:"largest"`
			Completed int `json:"completed"`
		} `json:"listener"`
		Management struct {
			Threads   int `json:"threads"`
			Queue     int `json:"queue"`
			Active    int `json:"active"`
			Rejected  int `json:"rejected"`
			Largest   int `json:"largest"`
			Completed int `json:"completed"`
		} `json:"management"`
		OpenDistroJobScheduler struct {
			Threads   int `json:"threads"`
			Queue     int `json:"queue"`
			Active    int `json:"active"`
			Rejected  int `json:"rejected"`
			Largest   int `json:"largest"`
			Completed int `json:"completed"`
		} `json:"open_distro_job_scheduler"`
		Refresh struct {
			Threads   int `json:"threads"`
			Queue     int `json:"queue"`
			Active    int `json:"active"`
			Rejected  int `json:"rejected"`
			Largest   int `json:"largest"`
			Completed int `json:"completed"`
		} `json:"refresh"`
		Search struct {
			Threads   int `json:"threads"`
			Queue     int `json:"queue"`
			Active    int `json:"active"`
			Rejected  int `json:"rejected"`
			Largest   int `json:"largest"`
			Completed int `json:"completed"`
		} `json:"search"`
		SearchThrottled struct {
			Threads   int `json:"threads"`
			Queue     int `json:"queue"`
			Active    int `json:"active"`
			Rejected  int `json:"rejected"`
			Largest   int `json:"largest"`
			Completed int `json:"completed"`
		} `json:"search_throttled"`
		Snapshot struct {
			Threads   int `json:"threads"`
			Queue     int `json:"queue"`
			Active    int `json:"active"`
			Rejected  int `json:"rejected"`
			Largest   int `json:"largest"`
			Completed int `json:"completed"`
		} `json:"snapshot"`
		SnapshotSegments struct {
			Threads   int `json:"threads"`
			Queue     int `json:"queue"`
			Active    int `json:"active"`
			Rejected  int `json:"rejected"`
			Largest   int `json:"largest"`
			Completed int `json:"completed"`
		} `json:"snapshot_segments"`
		SnapshotShards struct {
			Threads   int `json:"threads"`
			Queue     int `json:"queue"`
			Active    int `json:"active"`
			Rejected  int `json:"rejected"`
			Largest   int `json:"largest"`
			Completed int `json:"completed"`
		} `json:"snapshot_shards"`
		SQLWorker struct {
			Threads   int `json:"threads"`
			Queue     int `json:"queue"`
			Active    int `json:"active"`
			Rejected  int `json:"rejected"`
			Largest   int `json:"largest"`
			Completed int `json:"completed"`
		} `json:"sql-worker"`
		UltrawarmMigration struct {
			Threads   int `json:"threads"`
			Queue     int `json:"queue"`
			Active    int `json:"active"`
			Rejected  int `json:"rejected"`
			Largest   int `json:"largest"`
			Completed int `json:"completed"`
		} `json:"ultrawarm_migration"`
		Warmer struct {
			Threads   int `json:"threads"`
			Queue     int `json:"queue"`
			Active    int `json:"active"`
			Rejected  int `json:"rejected"`
			Largest   int `json:"largest"`
			Completed int `json:"completed"`
		} `json:"warmer"`
		Write struct {
			Threads   int `json:"threads"`
			Queue     int `json:"queue"`
			Active    int `json:"active"`
			Rejected  int `json:"rejected"`
			Largest   int `json:"largest"`
			Completed int `json:"completed"`
		} `json:"write"`
	} `json:"thread_pool"`
	Fs struct {
		Timestamp int64 `json:"timestamp"`
		Total     struct {
			TotalInBytes     int64 `json:"total_in_bytes"`
			FreeInBytes      int64 `json:"free_in_bytes"`
			AvailableInBytes int64 `json:"available_in_bytes"`
		} `json:"total"`
		Data []struct {
			Type             string `json:"type"`
			TotalInBytes     int64  `json:"total_in_bytes"`
			FreeInBytes      int64  `json:"free_in_bytes"`
			AvailableInBytes int64  `json:"available_in_bytes"`
		} `json:"data"`
		IoStats struct {
			Devices []struct {
				DeviceName      string `json:"device_name"`
				Operations      int    `json:"operations"`
				ReadOperations  int    `json:"read_operations"`
				WriteOperations int    `json:"write_operations"`
				ReadKilobytes   int    `json:"read_kilobytes"`
				WriteKilobytes  int    `json:"write_kilobytes"`
			} `json:"devices"`
			Total struct {
				Operations      int `json:"operations"`
				ReadOperations  int `json:"read_operations"`
				WriteOperations int `json:"write_operations"`
				ReadKilobytes   int `json:"read_kilobytes"`
				WriteKilobytes  int `json:"write_kilobytes"`
			} `json:"total"`
		} `json:"io_stats"`
	} `json:"fs"`
	HTTP struct {
		CurrentOpen int `json:"current_open"`
		TotalOpened int `json:"total_opened"`
	} `json:"http"`
	Breakers struct {
		Request struct {
			LimitSizeInBytes     int64   `json:"limit_size_in_bytes"`
			LimitSize            string  `json:"limit_size"`
			EstimatedSizeInBytes int     `json:"estimated_size_in_bytes"`
			EstimatedSize        string  `json:"estimated_size"`
			Overhead             float64 `json:"overhead"`
			Tripped              int     `json:"tripped"`
		} `json:"request"`
		Fielddata struct {
			LimitSizeInBytes     int64   `json:"limit_size_in_bytes"`
			LimitSize            string  `json:"limit_size"`
			EstimatedSizeInBytes int     `json:"estimated_size_in_bytes"`
			EstimatedSize        string  `json:"estimated_size"`
			Overhead             float64 `json:"overhead"`
			Tripped              int     `json:"tripped"`
		} `json:"fielddata"`
		InFlightRequests struct {
			LimitSizeInBytes     int64   `json:"limit_size_in_bytes"`
			LimitSize            string  `json:"limit_size"`
			EstimatedSizeInBytes int     `json:"estimated_size_in_bytes"`
			EstimatedSize        string  `json:"estimated_size"`
			Overhead             float64 `json:"overhead"`
			Tripped              int     `json:"tripped"`
		} `json:"in_flight_requests"`
		Accounting struct {
			LimitSizeInBytes     int64   `json:"limit_size_in_bytes"`
			LimitSize            string  `json:"limit_size"`
			EstimatedSizeInBytes int     `json:"estimated_size_in_bytes"`
			EstimatedSize        string  `json:"estimated_size"`
			Overhead             float64 `json:"overhead"`
			Tripped              int     `json:"tripped"`
		} `json:"accounting"`
		Parent struct {
			LimitSizeInBytes     int64   `json:"limit_size_in_bytes"`
			LimitSize            string  `json:"limit_size"`
			EstimatedSizeInBytes int     `json:"estimated_size_in_bytes"`
			EstimatedSize        string  `json:"estimated_size"`
			Overhead             float64 `json:"overhead"`
			Tripped              int     `json:"tripped"`
		} `json:"parent"`
	} `json:"breakers"`
	Script struct {
		Compilations              int `json:"compilations"`
		CacheEvictions            int `json:"cache_evictions"`
		CompilationLimitTriggered int `json:"compilation_limit_triggered"`
	} `json:"script"`
	Discovery struct {
		ClusterStateQueue struct {
			Total     int `json:"total"`
			Pending   int `json:"pending"`
			Committed int `json:"committed"`
		} `json:"cluster_state_queue"`
		PublishedClusterStates struct {
			FullStates        int `json:"full_states"`
			IncompatibleDiffs int `json:"incompatible_diffs"`
			CompatibleDiffs   int `json:"compatible_diffs"`
		} `json:"published_cluster_states"`
	} `json:"discovery"`
	Ingest struct {
		Total struct {
			Count        int `json:"count"`
			TimeInMillis int `json:"time_in_millis"`
			Current      int `json:"current"`
			Failed       int `json:"failed"`
		} `json:"total"`
		Pipelines struct {
		} `json:"pipelines"`
	} `json:"ingest"`
	AdaptiveSelection struct {
	} `json:"adaptive_selection"`
	ScriptCache struct {
		Sum struct {
			Compilations              int `json:"compilations"`
			CacheEvictions            int `json:"cache_evictions"`
			CompilationLimitTriggered int `json:"compilation_limit_triggered"`
		} `json:"sum"`
		Contexts []struct {
			Context                   string `json:"context"`
			Compilations              int    `json:"compilations"`
			CacheEvictions            int    `json:"cache_evictions"`
			CompilationLimitTriggered int    `json:"compilation_limit_triggered"`
		} `json:"contexts"`
	} `json:"script_cache"`
	IndexingPressure struct {
		Memory struct {
			Current struct {
				CombinedCoordinatingAndPrimaryInBytes int `json:"combined_coordinating_and_primary_in_bytes"`
				CoordinatingInBytes                   int `json:"coordinating_in_bytes"`
				PrimaryInBytes                        int `json:"primary_in_bytes"`
				ReplicaInBytes                        int `json:"replica_in_bytes"`
				AllInBytes                            int `json:"all_in_bytes"`
			} `json:"current"`
			Total struct {
				CombinedCoordinatingAndPrimaryInBytes int `json:"combined_coordinating_and_primary_in_bytes"`
				CoordinatingInBytes                   int `json:"coordinating_in_bytes"`
				PrimaryInBytes                        int `json:"primary_in_bytes"`
				ReplicaInBytes                        int `json:"replica_in_bytes"`
				AllInBytes                            int `json:"all_in_bytes"`
				CoordinatingRejections                int `json:"coordinating_rejections"`
				PrimaryRejections                     int `json:"primary_rejections"`
				ReplicaRejections                     int `json:"replica_rejections"`
			} `json:"total"`
		} `json:"memory"`
	} `json:"indexing_pressure"`
	ShardIndexingPressure struct {
		Stats struct {
		} `json:"stats"`
		TotalRejectionsBreakupShadowMode struct {
			NodeLimits                  int `json:"node_limits"`
			NoSuccessfulRequestLimits   int `json:"no_successful_request_limits"`
			ThroughputDegradationLimits int `json:"throughput_degradation_limits"`
		} `json:"total_rejections_breakup_shadow_mode"`
		Enabled  bool `json:"enabled"`
		Enforced bool `json:"enforced"`
	} `json:"shard_indexing_pressure"`
}
