package stats

type IndexName = string

// NOTE: The structs in this package were generated by getting responses from ES, using
// this handy tool at https://mholt.github.io/json-to-go/ and making adjustments

type IndicesStats struct {
	Response struct {
		Total      int `json:"total"`
		Successful int `json:"successful"`
		Failed     int `json:"failed"`
	} `json:"_shards"`
	All struct {
		Primaries IndexStats `json:"primaries"`
		Total     IndexStats `json:"total"`
	} `json:"_all"`
	Indices map[IndexName]struct {
		UUID      string     `json:"uuid"`
		Primaries IndexStats `json:"primaries"`
		Total     IndexStats `json:"total"`
	} `json:"indices"`
}

type IndexStats struct {
	Docs struct {
		Count   int `json:"count"`
		Deleted int `json:"deleted"`
	} `json:"docs"`
	Store struct {
		SizeInBytes     int64 `json:"size_in_bytes"`
		ReservedInBytes int   `json:"reserved_in_bytes"`
	} `json:"store"`
	Indexing struct {
		IndexTotal           int  `json:"index_total"`
		IndexTimeInMillis    int  `json:"index_time_in_millis"`
		IndexCurrent         int  `json:"index_current"`
		IndexFailed          int  `json:"index_failed"`
		DeleteTotal          int  `json:"delete_total"`
		DeleteTimeInMillis   int  `json:"delete_time_in_millis"`
		DeleteCurrent        int  `json:"delete_current"`
		NoopUpdateTotal      int  `json:"noop_update_total"`
		IsThrottled          bool `json:"is_throttled"`
		ThrottleTimeInMillis int  `json:"throttle_time_in_millis"`
	} `json:"indexing"`
	Get struct {
		Total               int `json:"total"`
		TimeInMillis        int `json:"time_in_millis"`
		ExistsTotal         int `json:"exists_total"`
		ExistsTimeInMillis  int `json:"exists_time_in_millis"`
		MissingTotal        int `json:"missing_total"`
		MissingTimeInMillis int `json:"missing_time_in_millis"`
		Current             int `json:"current"`
	} `json:"get"`
	Search struct {
		OpenContexts        int `json:"open_contexts"`
		QueryTotal          int `json:"query_total"`
		QueryTimeInMillis   int `json:"query_time_in_millis"`
		QueryCurrent        int `json:"query_current"`
		FetchTotal          int `json:"fetch_total"`
		FetchTimeInMillis   int `json:"fetch_time_in_millis"`
		FetchCurrent        int `json:"fetch_current"`
		ScrollTotal         int `json:"scroll_total"`
		ScrollTimeInMillis  int `json:"scroll_time_in_millis"`
		ScrollCurrent       int `json:"scroll_current"`
		SuggestTotal        int `json:"suggest_total"`
		SuggestTimeInMillis int `json:"suggest_time_in_millis"`
		SuggestCurrent      int `json:"suggest_current"`
	} `json:"search"`
	Merges struct {
		Current                    int   `json:"current"`
		CurrentDocs                int   `json:"current_docs"`
		CurrentSizeInBytes         int   `json:"current_size_in_bytes"`
		Total                      int   `json:"total"`
		TotalTimeInMillis          int   `json:"total_time_in_millis"`
		TotalDocs                  int   `json:"total_docs"`
		TotalSizeInBytes           int64 `json:"total_size_in_bytes"`
		TotalStoppedTimeInMillis   int   `json:"total_stopped_time_in_millis"`
		TotalThrottledTimeInMillis int   `json:"total_throttled_time_in_millis"`
		TotalAutoThrottleInBytes   int64 `json:"total_auto_throttle_in_bytes"`
	} `json:"merges"`
	Refresh struct {
		Total                     int `json:"total"`
		TotalTimeInMillis         int `json:"total_time_in_millis"`
		ExternalTotal             int `json:"external_total"`
		ExternalTotalTimeInMillis int `json:"external_total_time_in_millis"`
		Listeners                 int `json:"listeners"`
	} `json:"refresh"`
	Flush struct {
		Total             int `json:"total"`
		Periodic          int `json:"periodic"`
		TotalTimeInMillis int `json:"total_time_in_millis"`
	} `json:"flush"`
	Warmer struct {
		Current           int `json:"current"`
		Total             int `json:"total"`
		TotalTimeInMillis int `json:"total_time_in_millis"`
	} `json:"warmer"`
	QueryCache struct {
		MemorySizeInBytes int `json:"memory_size_in_bytes"`
		TotalCount        int `json:"total_count"`
		HitCount          int `json:"hit_count"`
		MissCount         int `json:"miss_count"`
		CacheSize         int `json:"cache_size"`
		CacheCount        int `json:"cache_count"`
		Evictions         int `json:"evictions"`
	} `json:"query_cache"`
	Fielddata struct {
		MemorySizeInBytes int `json:"memory_size_in_bytes"`
		Evictions         int `json:"evictions"`
	} `json:"fielddata"`
	Completion struct {
		SizeInBytes int `json:"size_in_bytes"`
	} `json:"completion"`
	Segments struct {
		Count                     int `json:"count"`
		MemoryInBytes             int `json:"memory_in_bytes"`
		TermsMemoryInBytes        int `json:"terms_memory_in_bytes"`
		StoredFieldsMemoryInBytes int `json:"stored_fields_memory_in_bytes"`
		TermVectorsMemoryInBytes  int `json:"term_vectors_memory_in_bytes"`
		NormsMemoryInBytes        int `json:"norms_memory_in_bytes"`
		PointsMemoryInBytes       int `json:"points_memory_in_bytes"`
		DocValuesMemoryInBytes    int `json:"doc_values_memory_in_bytes"`
		IndexWriterMemoryInBytes  int `json:"index_writer_memory_in_bytes"`
		VersionMapMemoryInBytes   int `json:"version_map_memory_in_bytes"`
		FixedBitSetMemoryInBytes  int `json:"fixed_bit_set_memory_in_bytes"`
		MaxUnsafeAutoIDTimestamp  int `json:"max_unsafe_auto_id_timestamp"`
		FileSizes                 struct {
		} `json:"file_sizes"`
	} `json:"segments"`
	Translog struct {
		Operations              int `json:"operations"`
		SizeInBytes             int `json:"size_in_bytes"`
		UncommittedOperations   int `json:"uncommitted_operations"`
		UncommittedSizeInBytes  int `json:"uncommitted_size_in_bytes"`
		EarliestLastModifiedAge int `json:"earliest_last_modified_age"`
	} `json:"translog"`
	RequestCache struct {
		MemorySizeInBytes int `json:"memory_size_in_bytes"`
		Evictions         int `json:"evictions"`
		HitCount          int `json:"hit_count"`
		MissCount         int `json:"miss_count"`
	} `json:"request_cache"`
	Recovery struct {
		CurrentAsSource      int `json:"current_as_source"`
		CurrentAsTarget      int `json:"current_as_target"`
		ThrottleTimeInMillis int `json:"throttle_time_in_millis"`
	} `json:"recovery"`
}
